name: CI

on:
  push:
    branches: [main, develop]
    tags: ['!**']
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'release:') }}
    
    strategy:
      matrix:
        node-version: [20, 22]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8
              
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Type check
        run: pnpm run typecheck
        
      - name: Run tests
        run: pnpm test
        
      - name: Build packages
        run: pnpm run build
        
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
    
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install dependencies  
        run: pnpm install --no-frozen-lockfile
        
      - name: Lint files
        run: pnpm run lint

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - uses: pnpm/action-setup@v2
        with:
          version: 8
    
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install dependencies  
        run: pnpm install --no-frozen-lockfile
        
      - name: Run npm audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Run npm audit (production only)
        run: pnpm audit --prod --audit-level=moderate
        
  bundle-size:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'release:') }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - uses: pnpm/action-setup@v2
        with:
          version: 8
    
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install dependencies  
        run: pnpm install --no-frozen-lockfile
        
      - name: Build packages
        run: pnpm run build
        
      - name: Check minimal bundle size
        run: |
          cd test-minimal
          pnpm install
          pnpm run build
          
          # Check if size report was generated
          if [ ! -f dist/size-report.json ]; then
            echo "‚ùå Size report not generated"
            exit 1
          fi
          
          # Parse the report and display
          node -e "
            const report = JSON.parse(require('fs').readFileSync('dist/size-report.json'));
            const formatBytes = (b) => b < 1024 ? b + ' B' : (b/1024).toFixed(1) + ' KB';
            
            console.log('üì¶ Bundle Size Report');
            console.log('='.repeat(50));
            console.log('Original: ' + formatBytes(report.sizes.original));
            console.log('Gzip:     ' + formatBytes(report.sizes.gzip));
            console.log('Brotli:   ' + formatBytes(report.sizes.brotli));
            console.log('='.repeat(50));
            
            // Check threshold
            const MAX_GZIP = 5120; // 5KB
            if (report.sizes.gzip > MAX_GZIP) {
              console.log('‚ùå Bundle exceeds ' + formatBytes(MAX_GZIP) + ' limit!');
              process.exit(1);
            } else {
              console.log('‚úÖ Bundle within size limits');
            }
          "
          
      - name: Run minimal bundle test
        run: |
          cd test-minimal
          pnpm test